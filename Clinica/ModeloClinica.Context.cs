//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clinica
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClinicaEntidad : DbContext
    {
        public ClinicaEntidad()
            : base("name=ClinicaEntidad")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Atencion> Atencion { get; set; }
        public virtual DbSet<Clinica> Clinica { get; set; }
        public virtual DbSet<Clinica_profesinales_especialidad> Clinica_profesinales_especialidad { get; set; }
        public virtual DbSet<Clinica_profesionales> Clinica_profesionales { get; set; }
        public virtual DbSet<DiasSemana> DiasSemana { get; set; }
        public virtual DbSet<Especialidad> Especialidad { get; set; }
        public virtual DbSet<Localidad> Localidad { get; set; }
        public virtual DbSet<obra_social> obra_social { get; set; }
        public virtual DbSet<Pacientes> Pacientes { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<Profesional> Profesional { get; set; }
        public virtual DbSet<Provincia> Provincia { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<sucursales_profesionales_especialidades> sucursales_profesionales_especialidades { get; set; }
        public virtual DbSet<TipoUsuario> TipoUsuario { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual ObjectResult<spDiasAtencion_Result> spDiasAtencion(Nullable<int> sucursalID)
        {
            var sucursalIDParameter = sucursalID.HasValue ?
                new ObjectParameter("SucursalID", sucursalID) :
                new ObjectParameter("SucursalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDiasAtencion_Result>("spDiasAtencion", sucursalIDParameter);
        }
    
        public virtual ObjectResult<spDiasAtencionAsignados_Result> spDiasAtencionAsignados(Nullable<int> sucursalID)
        {
            var sucursalIDParameter = sucursalID.HasValue ?
                new ObjectParameter("SucursalID", sucursalID) :
                new ObjectParameter("SucursalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDiasAtencionAsignados_Result>("spDiasAtencionAsignados", sucursalIDParameter);
        }
    
        public virtual ObjectResult<spEspecialidadProfesional_Result> spEspecialidadProfesional(Nullable<int> profesionalID, Nullable<int> clinicaID)
        {
            var profesionalIDParameter = profesionalID.HasValue ?
                new ObjectParameter("ProfesionalID", profesionalID) :
                new ObjectParameter("ProfesionalID", typeof(int));
    
            var clinicaIDParameter = clinicaID.HasValue ?
                new ObjectParameter("ClinicaID", clinicaID) :
                new ObjectParameter("ClinicaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEspecialidadProfesional_Result>("spEspecialidadProfesional", profesionalIDParameter, clinicaIDParameter);
        }
    
        public virtual ObjectResult<spProfesionalClinica_Result> spProfesionalClinica(Nullable<int> clinicaId)
        {
            var clinicaIdParameter = clinicaId.HasValue ?
                new ObjectParameter("ClinicaId", clinicaId) :
                new ObjectParameter("ClinicaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProfesionalClinica_Result>("spProfesionalClinica", clinicaIdParameter);
        }
    
        public virtual ObjectResult<spProfesionalClinicaEspecialidadInicio_Result> spProfesionalClinicaEspecialidadInicio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProfesionalClinicaEspecialidadInicio_Result>("spProfesionalClinicaEspecialidadInicio");
        }
    
        public virtual ObjectResult<spProfesionalConEspecialidad_Result> spProfesionalConEspecialidad(Nullable<int> clinicaID)
        {
            var clinicaIDParameter = clinicaID.HasValue ?
                new ObjectParameter("ClinicaID", clinicaID) :
                new ObjectParameter("ClinicaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProfesionalConEspecialidad_Result>("spProfesionalConEspecialidad", clinicaIDParameter);
        }
    
        public virtual ObjectResult<spProfesionalenClinica_Result> spProfesionalenClinica(Nullable<int> clinicaId)
        {
            var clinicaIdParameter = clinicaId.HasValue ?
                new ObjectParameter("ClinicaId", clinicaId) :
                new ObjectParameter("ClinicaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProfesionalenClinica_Result>("spProfesionalenClinica", clinicaIdParameter);
        }
    
        public virtual ObjectResult<spProfesionalSucursal_Result> spProfesionalSucursal(Nullable<int> sucursalID, Nullable<int> clinica)
        {
            var sucursalIDParameter = sucursalID.HasValue ?
                new ObjectParameter("SucursalID", sucursalID) :
                new ObjectParameter("SucursalID", typeof(int));
    
            var clinicaParameter = clinica.HasValue ?
                new ObjectParameter("Clinica", clinica) :
                new ObjectParameter("Clinica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProfesionalSucursal_Result>("spProfesionalSucursal", sucursalIDParameter, clinicaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spSucursalId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spSucursalId");
        }
    }
}
